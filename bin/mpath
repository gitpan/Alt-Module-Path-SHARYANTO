#!/usr/bin/env perl

use 5.010001;
use strict;
use warnings;

use Getopt::Long qw(GetOptions);
use Module::Path qw(module_path);
use Pod::Usage qw(pod2usage);

our $VERSION = '0.01'; # VERSION

my %opts;
GetOptions(\%opts,
           'help|h|?',
           'quiet|q',
           'full|f',
           'abs',
           'all',
           'find-pm|pm!'   => \$opts{find_pm},
           'find-pmc|pmc!' => \$opts{find_pmc},
           'find-pod|pod!' => \$opts{find_pod},
       )
    or pod2usage 2;

if ($opts{help}) {
    pod2usage(
        -verbose => 2,
        -exitval => 0,
    )
}
elsif (!@ARGV) {
    pod2usage(
        -message => 'No module specified',
        -verbose => 1,
    );
}

my $all_found = 1;

my %mpopts = (
    abs      => $opts{abs},
    all      => $opts{all},
    find_pm  => $opts{find_pm},
    find_pmc => $opts{find_pmc},
    find_pod => $opts{find_pod},
);

for my $module (@ARGV) {
    my @paths;
    if ($opts{all}) {
        @paths = module_path($module, \%mpopts);
    } else {
        my $path = module_path($module, \%mpopts);
        push @paths, $path if defined $path;
    }

    if (!@paths) {
        $all_found = 0;
        warn "$module not found\n" unless $opts{quiet};
    } else {
        for (@paths) {
            print "$module " if $opts{full};
            print "$_\n";
        }
    }
}

my $status = $all_found ? 0 : 1;
exit $status;

# ABSTRACT: Display the path to a perl module (installed locally)
# PODNAME: mpath

__END__

=pod

=encoding UTF-8

=head1 NAME

mpath - Display the path to a perl module (installed locally)

=head1 VERSION

version 0.01

=head1 DESCRIPTION

mpath displays the full path to a perl module on the local system. It uses the
C<module_path()> function from L<Module::Path> to get the path.

If one of the module wasn't found, mpath will exit with the exit code 1 and
print the following message (you can silence it with the option B<--quiet>):

  % mpath Foo::Bar
  Foo::Bar not found

or:

  % mpath Moose Foo::Bar
  /usr/local/lib/perl5/site_perl/5.16.0/darwin-2level/Moose.pm
  Foo::Bar not found

=head1 USAGE

  mpath [OPTIONS] MODULE [MODULE ...]

=head1 EXAMPLE

  % mpath Module::Path
  /usr/local/lib/perl5/site_perl/5.16.0/Module/Path.pm

  % mpath --full Module::Path
  Module::Path /usr/local/lib/perl5/site_perl/5.16.0/Module/Path.pm

  % mpath Moose Moo
  /usr/local/lib/perl5/site_perl/5.16.0/darwin-2level/Moose.pm
  /usr/local/lib/perl5/site_perl/5.16.0/Moo.pm

=head1 OPTIONS

=over

=item B<-h>, B<-?>, B<--help>

Print this help message and exit.

=item B<-f>, B<--full>

Print module name.

=item B<-q>, B<--quiet>

Don't print any error when one of the module requested could not be found.

=item C<--abs>

Absolutize paths.

=item C<--all>

Find all found paths in C<@INC> instead of the first one.

=item C<--[no]find-pm>, C<--[no]pm>

Find C<.pm> files. Default is on.

=item C<--[no]find-pmc>, C<--[no]pmc>

Find C<.pmc> files. Default is on.

=item C<--[no]find-pod>, C<--[no]pod>

Find C<.pod> files.

=back

=head1 SEE ALSO

L<Alt::Module::Path::SHARYANTO>

L<Module::Path>

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/Alt-Module-Path-SHARYANTO>.

=head1 SOURCE

Source repository is at L<https://github.com/sharyanto/perl-Alt-Module-Path-SHARYANTO>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=Alt-Module-Path-SHARYANTO>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

Steven Haryanto <stevenharyanto@gmail.com>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2014 by Steven Haryanto.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
